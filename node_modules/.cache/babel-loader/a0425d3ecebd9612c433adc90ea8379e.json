{"ast":null,"code":"import _defineProperty from \"/home/alaya/workspace/lab/reactjs-chat/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { LIST_ROOMS, SAVE_USER, UPDATE_USER, ROOM_IN, LIST_ROOM_USER } from '../actions/types';\nconst initialState = {\n  rooms: {\n    list: [],\n    selected: {},\n    roomUsers: []\n  }\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LIST_ROOMS:\n      const tempRooms = _objectSpread({}, state);\n\n      tempRooms.rooms.list = action.payload;\n      console.log(tempRooms);\n      return _objectSpread({}, tempRooms);\n\n    case ROOM_IN:\n      tempRooms = _objectSpread({}, state);\n      tempRooms.rooms.selected = action.payload;\n      return _objectSpread({}, tempRooms);\n\n    case LIST_ROOM_USER:\n      tempRooms = _objectSpread({}, state);\n      tempRooms.rooms.roomUsers = action.payload;\n      return _objectSpread({}, tempRooms);\n\n    default:\n      return state;\n  }\n\n  ;\n}","map":{"version":3,"sources":["/home/alaya/workspace/lab/reactjs-chat/src/reducers/roomsReducer.js"],"names":["LIST_ROOMS","SAVE_USER","UPDATE_USER","ROOM_IN","LIST_ROOM_USER","initialState","rooms","list","selected","roomUsers","state","action","type","tempRooms","payload","console","log"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,WAAhC,EAA6CC,OAA7C,EAAsDC,cAAtD,QAA4E,kBAA5E;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,EADD;AAELC,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,SAAS,EAAC;AAHL;AADY,CAArB;AAQA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAsC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKZ,UAAL;AACE,YAAMa,SAAS,qBAAQH,KAAR,CAAf;;AACAG,MAAAA,SAAS,CAACP,KAAV,CAAgBC,IAAhB,GAAuBI,MAAM,CAACG,OAA9B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,+BACMA,SADN;;AAIF,SAAKV,OAAL;AACGU,MAAAA,SAAS,qBAASH,KAAT,CAAT;AACDG,MAAAA,SAAS,CAACP,KAAV,CAAgBE,QAAhB,GAA2BG,MAAM,CAACG,OAAlC;AACA,+BACMD,SADN;;AAGF,SAAKT,cAAL;AACGS,MAAAA,SAAS,qBAASH,KAAT,CAAT;AACDG,MAAAA,SAAS,CAACP,KAAV,CAAgBG,SAAhB,GAA4BE,MAAM,CAACG,OAAnC;AACA,+BACMD,SADN;;AAGF;AACE,aAAOH,KAAP;AAtBN;;AAwBC;AAEF","sourcesContent":["import { LIST_ROOMS, SAVE_USER, UPDATE_USER, ROOM_IN, LIST_ROOM_USER } from '../actions/types';\n\nconst initialState = {\n  rooms: {\n    list: [],\n    selected: {},\n    roomUsers:[]\n  }\n}\n\nexport default function(state = initialState, action){\n  switch(action.type) {\n      case LIST_ROOMS:\n        const tempRooms = {... state};\n        tempRooms.rooms.list = action.payload;\n        console.log(tempRooms);\n        return {\n          ... tempRooms\n        };\n\n      case ROOM_IN:\n         tempRooms = { ... state};\n        tempRooms.rooms.selected = action.payload;\n        return {\n          ... tempRooms\n        }\n      case LIST_ROOM_USER:\n         tempRooms = { ... state};\n        tempRooms.rooms.roomUsers = action.payload;\n        return {\n          ... tempRooms \n        }\n      default: \n        return state;\n\n  };\n\n}"]},"metadata":{},"sourceType":"module"}