{"ast":null,"code":"var _jsxFileName = \"/home/alaya/workspace/lab/reactjs-chat/src/components/chats/UsersOnline.js\";\nimport React, { Component } from 'react';\nimport '../../style.css';\nimport firebase from '../db/firestore';\nimport UserOnline from './UserOnline';\nimport { connect } from 'react-redux';\nimport { getUsersRoom } from '../../actions/roomActions';\n\nclass UsersOnline extends Component {\n  constructor(...args) {\n    super(...args);\n    this.db = firebase.firestore();\n    this.state = {\n      users: []\n    };\n\n    this.handlerClick = user => {\n      if (user.id == -1) {\n        this.props.viewRoomChats();\n      } else {\n        this.props.viewPrivateChats(user);\n      }\n    };\n\n    this.getListUsersOnline = async () => {\n      await this.props.getUsersRoom(this.props.rooms.selected);\n    };\n  }\n\n  componentDidMount() {\n    this.getListUsersOnline();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \" boxUsers \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"list-group list-group-flush \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.props.rooms.roomUsers.map(user => {\n      return React.createElement(UserOnline, {\n        key: user.id,\n        handlerClick: this.handlerClick,\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nconst stateMapToProps = state => ({\n  auth: state.authReducer.auth,\n  rooms: state.roomsReducer.rooms\n});\n\nexport default connect(stateMapToProps, {\n  getUsersRoom\n})(UsersOnline);","map":{"version":3,"sources":["/home/alaya/workspace/lab/reactjs-chat/src/components/chats/UsersOnline.js"],"names":["React","Component","firebase","UserOnline","connect","getUsersRoom","UsersOnline","db","firestore","state","users","handlerClick","user","id","props","viewRoomChats","viewPrivateChats","getListUsersOnline","rooms","selected","componentDidMount","render","roomUsers","map","stateMapToProps","auth","authReducer","roomsReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,2BAA7B;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAElCM,EAFkC,GAE7BL,QAAQ,CAACM,SAAT,EAF6B;AAAA,SAIlCC,KAJkC,GAI1B;AACNC,MAAAA,KAAK,EAAE;AADD,KAJ0B;;AAAA,SAclCC,YAdkC,GAclBC,IAAD,IAAU;AACvB,UAAGA,IAAI,CAACC,EAAL,IAAW,CAAC,CAAf,EAAiB;AACf,aAAKC,KAAL,CAAWC,aAAX;AACD,OAFD,MAEK;AACH,aAAKD,KAAL,CAAWE,gBAAX,CAA4BJ,IAA5B;AACD;AACF,KApBiC;;AAAA,SAsBlCK,kBAtBkC,GAsBb,YAAW;AAC9B,YAAM,KAAKH,KAAL,CAAWT,YAAX,CAAwB,KAAKS,KAAL,CAAWI,KAAX,CAAiBC,QAAzC,CAAN;AAED,KAzBiC;AAAA;;AAQlCC,EAAAA,iBAAiB,GAAE;AAEjB,SAAKH,kBAAL;AAED;;AAeDI,EAAAA,MAAM,GAAE;AACJ,WACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKP,KAAL,CAAWI,KAAX,CAAiBI,SAAjB,CAA2BC,GAA3B,CAA+BX,IAAI,IAAI;AAClC,aACC,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAIA,IAAI,CAACC,EAAxB;AACC,QAAA,YAAY,EAAI,KAAKF,YADtB;AAEC,QAAA,IAAI,EAAIC,IAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAKD,KANJ,CADD,CADF,CADF;AAcH;;AA1CiC;;AA8CpC,MAAMY,eAAe,GAAIf,KAAD,KAAW;AACjCgB,EAAAA,IAAI,EAAEhB,KAAK,CAACiB,WAAN,CAAkBD,IADS;AAEjCP,EAAAA,KAAK,EAAET,KAAK,CAACkB,YAAN,CAAmBT;AAFO,CAAX,CAAxB;;AAIA,eAAed,OAAO,CAACoB,eAAD,EAAiB;AAACnB,EAAAA;AAAD,CAAjB,CAAP,CAAwCC,WAAxC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport '../../style.css';\nimport firebase from '../db/firestore';\nimport UserOnline from './UserOnline';\nimport { connect } from 'react-redux';\nimport { getUsersRoom } from '../../actions/roomActions';\n\nclass UsersOnline extends Component {\n\n  db = firebase.firestore();\n\n  state = {\n    users: []\n  };\n\n  componentDidMount(){\n    \n    this.getListUsersOnline();\n    \n  }\n\n  handlerClick = (user) => {\n    if(user.id == -1){\n      this.props.viewRoomChats();\n    }else{\n      this.props.viewPrivateChats(user);\n    }\n  }\n\n  getListUsersOnline = async() => {\n    await this.props.getUsersRoom(this.props.rooms.selected);\n   \n  }\n\n  render(){\n      return(\n        <div className=\" boxUsers \">\n          <ul  className=\"list-group list-group-flush \">\n          {this.props.rooms.roomUsers.map(user => {\n                return (\n                 <UserOnline key = {user.id}\n                  handlerClick = {this.handlerClick}\n                  user = {user} />\n                )\n              })              \n              }\n          </ul>\n        </div>\n      )\n  }\n  \n}\n\nconst stateMapToProps = (state) =>({\n  auth: state.authReducer.auth,\n  rooms: state.roomsReducer.rooms\n});\nexport default connect(stateMapToProps,{getUsersRoom})(UsersOnline)\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}