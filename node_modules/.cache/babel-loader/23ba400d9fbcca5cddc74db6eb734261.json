{"ast":null,"code":"import _defineProperty from \"/home/alaya/workspace/lab/reactjs-chat/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/alaya/workspace/lab/reactjs-chat/src/components/SelectRoom.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport HeaderRooms from './HeaderRooms';\nimport ModalNameChat from './ModalNameChat'; //import swal from 'sweetalert';\n\nimport CardRoom from './CardRoom';\nimport { connect } from 'react-redux';\nimport { listRooms, roomIn } from '../actions/roomActions';\nimport Spinner from './layout/Spinner';\nimport { compose } from 'redux';\n\nclass SelectRoom extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sw: [],\n      nameRoom: '',\n      modalShow: false,\n      roomId: '',\n      loading: false\n    };\n\n    this.loadRooms = async () => {\n      this.setState(_objectSpread({}, this.state, {\n        loading: true\n      }));\n      await this.props.listRooms();\n      this.setState(_objectSpread({}, this.state, {\n        loading: false\n      }));\n      console.log('select room', this.props);\n    };\n\n    this.handlerClick = async room => {\n      await this.props.roomIn(room, this.props.auth.user.uid);\n      console.log(this.props);\n      this.props.history.push({\n        pathname: '/chat'\n      });\n    };\n  }\n\n  //  handlerClick = async (idx, roomId) => {\n  //    this.setState({\n  //      ... this.state,\n  //      nameRoom: this.state.rooms[idx].name,\n  //      modalShow: true,\n  //      roomId: roomId\n  //      });\n  //  }\n  componentDidMount() {\n    this.loadRooms();\n  }\n\n  componentWillUnmount() {//let ref = this.db.collection('users');\n    //ref.doc.update()\n    //\tconsole.log('room componentWillUnmount-------------------------')\n  }\n\n  render() {\n    if (this.state.loading) {\n      return React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      });\n    }\n\n    let modalClose = () => this.setState({\n      modalShow: false\n    });\n\n    const rooms = this.props.rooms;\n    const auth = this.props.auth;\n    return React.createElement(\"div\", {\n      className: \"mx-3 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(HeaderRooms, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card-columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, rooms.list.map((room, idx) => React.createElement(CardRoom, {\n      key: room.id,\n      room: room,\n      handlerClick: this.handlerClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  rooms: state.roomsReducer.rooms,\n  auth: state.authReducer.auth\n});\n\nexport default connect(mapStateToProps, {\n  listRooms,\n  roomIn\n})(SelectRoom);","map":{"version":3,"sources":["/home/alaya/workspace/lab/reactjs-chat/src/components/SelectRoom.js"],"names":["React","Component","HeaderRooms","ModalNameChat","CardRoom","connect","listRooms","roomIn","Spinner","compose","SelectRoom","state","sw","nameRoom","modalShow","roomId","loading","loadRooms","setState","props","console","log","handlerClick","room","auth","user","uid","history","push","pathname","componentDidMount","componentWillUnmount","render","modalClose","rooms","list","map","idx","id","mapStateToProps","roomsReducer","authReducer"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport HeaderRooms from './HeaderRooms';\nimport ModalNameChat from './ModalNameChat';\n//import swal from 'sweetalert';\nimport CardRoom from './CardRoom';\nimport { connect } from 'react-redux';\nimport { listRooms, roomIn } from '../actions/roomActions';\nimport  Spinner  from './layout/Spinner';\nimport { compose } from 'redux'; \n\nclass SelectRoom extends Component {\n\n  state = {\n    sw: [],\n    nameRoom: '',\n    modalShow: false,\n    roomId: '',\n    loading: false\n  };\n\n\n//  handlerClick = async (idx, roomId) => {\n//    this.setState({\n//      ... this.state,\n//      nameRoom: this.state.rooms[idx].name,\n//      modalShow: true,\n//      roomId: roomId\n//      });\n//  }\n\n  componentDidMount(){\n   \n    this.loadRooms();\n    \n  }\n\n\n  loadRooms = async() => {\n        this.setState({\n      ... this.state,\n      loading: true\n    }); \n    await this.props.listRooms();\n    this.setState({\n      ... this.state,\n      loading: false\n    });\n    console.log('select room',this.props);\n  }\n\n  componentWillUnmount(){\n\t\t//let ref = this.db.collection('users');\n\t\t//ref.doc.update()\n\t//\tconsole.log('room componentWillUnmount-------------------------')\n\t}\n\n  handlerClick = async ( room ) => {\n\n\n    await this.props.roomIn(room, this.props.auth.user.uid);\n    console.log(this.props);\n    this.props.history.push({\n                              pathname:'/chat',\n                            });\n  }\n\n\n  render() {\n    \n    if(this.state.loading){\n      return (<Spinner/>);\n    }\n    let modalClose = () => this.setState( { modalShow: false } );\n    const { rooms } = this.props;\n    const { auth } = this.props;\n\n    return (\n      <div className=\"mx-3 \">       \n        <HeaderRooms/>\n        <div className=\"card-columns\">\n          { rooms.list.map( (room, idx) => (\n            <CardRoom key={room.id} \n                      room={ room }\n                      handlerClick = { this.handlerClick } \n                      />\n          ))}\n          {/*<ModalNameChat\n                show = { this.state.modalShow }\n                onHide = { modalClose }\n                nameroom = { this.state.nameRoom }\n                roomid = { this.state.roomId }\n                saveregister = { this.saveRegister }\n              />\n              */}\n        </div>\n      </div>\n\n    )    \n  }\n\n}\n\nconst mapStateToProps = state => ({\n  rooms: state.roomsReducer.rooms,\n  auth: state.authReducer.auth\n})\n\nexport default connect( mapStateToProps,{ listRooms, roomIn })(SelectRoom);\n"]},"metadata":{},"sourceType":"module"}