{"ast":null,"code":"import _defineProperty from \"/home/alaya/workspace/lab/reactjs-chat/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { LOGIN, REGISTER, LOGOUT } from './types';\nimport firebase from '../components/db/firestore'; //import firebase from '../db/firestore';\n\nconst db = firebase.firestore();\nconst errorAuth = {\n  'auth/email-already-in-use': 'El usuario ya se encuentra resgitrado',\n  'auth/weak-password': 'El password es vulnerable',\n  'auth/wrong-password': 'Usuario o password es incorrecto'\n};\nexport const login = user => async dispatch => {\n  const email = user.email,\n        password = user.password;\n  let auth = {};\n\n  try {\n    auth = await firebase.auth().signInWithEmailAndPassword(email, password);\n  } catch (err) {\n    let code = err.code,\n        message = err.message;\n    const error = {\n      code: errorAuth[code]\n    };\n    auth = error;\n  } finally {\n    dispatch({\n      type: LOGIN,\n      payload: auth\n    });\n  }\n};\nexport const register = user => async dispatch => {\n  const firstName = user.firstName,\n        lastName = user.lastName,\n        email = user.email,\n        password = user.password;\n  let out;\n\n  try {\n    const auth = await firebase.auth().createUserWithEmailAndPassword(email, password);\n    out = auth;\n    const ref = db.collection('users').doc(auth.user.uid);\n    const userDb = await ref.set({\n      firstName,\n      lastName,\n      email,\n      login: 'email',\n      createdAt: Date.now()\n    });\n    out.userDb = userDb;\n  } catch (err) {\n    let code = err.code,\n        message = err.message;\n    const error = {\n      code: errorAuth[code]\n    };\n    out = _objectSpread({}, error);\n  } finally {\n    dispatch({\n      type: REGISTER,\n      payload: out\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  firebase.auth().signOut().then(function (logout) {\n    console.log('LOGOUT', logout);\n    dispatch({\n      type: LOGOUT,\n      payload: {}\n    });\n  }).catch(function (error) {\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["/home/alaya/workspace/lab/reactjs-chat/src/actions/authActions.js"],"names":["LOGIN","REGISTER","LOGOUT","firebase","db","firestore","errorAuth","login","user","dispatch","email","password","auth","signInWithEmailAndPassword","err","code","message","error","type","payload","register","firstName","lastName","out","createUserWithEmailAndPassword","ref","collection","doc","uid","userDb","set","createdAt","Date","now","logout","signOut","then","console","log","catch"],"mappings":"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","sourcesContent":["import { LOGIN, REGISTER, LOGOUT } from './types';\nimport firebase from '../components/db/firestore';\n//import firebase from '../db/firestore';\n\nconst db = firebase.firestore();\n\n\nconst errorAuth = {\n  'auth/email-already-in-use': 'El usuario ya se encuentra resgitrado',\n  'auth/weak-password': 'El password es vulnerable',\n  'auth/wrong-password': 'Usuario o password es incorrecto'\n}\n\n\nexport const login = (user) => async dispatch => {\n  const { email, password } = user;\n  let auth = {};\n  try {\n    auth = await firebase.auth().signInWithEmailAndPassword(email, password);   \n  } catch( err ) {\n    let { code, message } = err;\n    const error = {\n      code: errorAuth[code]\n    }\n    auth = error;\n  } finally {\n    dispatch({ \n      type: LOGIN,\n      payload: auth\n    });\n  }\n};\n\n\nexport const register = (user) => async dispatch => {\n  const { firstName, lastName, email, password } = user;\n  let out;\n  try {\n    const auth = await firebase.auth().createUserWithEmailAndPassword(email, password);\n    out =  auth;    \n    const ref = db.collection('users').doc(auth.user.uid);\n    const userDb = await ref.set({\n      firstName, \n      lastName, \n      email,\n      login: 'email',\n      createdAt: Date.now()\n    });\n    out.userDb = userDb\n\n  } catch ( err ) {\n    let { code, message } = err;\n    const error = {\n      code: errorAuth[code]\n    }\n    out = {... error};    \n  } finally {\n    dispatch({\n      type: REGISTER,\n      payload: out\n    });\n  }\n};\n\n\nexport const logout = () => async dispatch => {\n  firebase.auth().signOut().then(function(logout) {\n    console.log('LOGOUT',logout);\n    dispatch({\n        type: LOGOUT,\n        payload: {}\n    });\n  }).catch(function(error) {\n    console.log(error);\n  });\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}