{"ast":null,"code":"import _defineProperty from \"/home/alaya/workspace/lab/reactjs-chat/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/alaya/workspace/lab/reactjs-chat/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/alaya/workspace/lab/reactjs-chat/src/components/admin/ListRooms.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, Fragment } from 'react';\nimport firebase from '../db/firestore';\nimport Room from './Room';\n\nconst ListRooms = () => {\n  const db = firebase.firestore();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        rooms = _useState2[0],\n        setRooms = _useState2[1];\n\n  useEffect(() => {\n    loadRooms();\n  }, []);\n\n  const loadRooms = () => {\n    let temp = [];\n    let ref = db.collection(\"rooms\");\n    ref.onSnapshot(rooms => {\n      temp = rooms.docs.map(doc => {\n        return _objectSpread({\n          id: doc.id\n        }, doc.data());\n      });\n      console.log(temp);\n      setRooms(temp);\n    });\n  };\n\n  const deleteRoom = room => {\n    console.log('en el delete ');\n    console.log(room);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"text-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Lista de salas creadas\"), React.createElement(\"table\", {\n    className: \"table table-dark table-striped\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"#\"), React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Nombre\"), React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Descripccion\"), React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Acciones\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, rooms.map((room, idx) => React.createElement(Room, {\n    room: room,\n    idx: idx,\n    deleteRoom: deleteRoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })))));\n};\n\nexport default ListRooms;","map":{"version":3,"sources":["/home/alaya/workspace/lab/reactjs-chat/src/components/admin/ListRooms.js"],"names":["React","useState","useEffect","Fragment","firebase","Room","ListRooms","db","firestore","rooms","setRooms","loadRooms","temp","ref","collection","onSnapshot","docs","map","doc","id","data","console","log","deleteRoom","room","idx"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAoD,OAApD;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAMC,EAAE,GAAGH,QAAQ,CAACI,SAAT,EAAX;;AADsB,oBAEIP,QAAQ,CAAC,EAAD,CAFZ;AAAA;AAAA,QAEfQ,KAFe;AAAA,QAERC,QAFQ;;AAItBR,EAAAA,SAAS,CAAC,MAAI;AAEZS,IAAAA,SAAS;AACV,GAHQ,EAGP,EAHO,CAAT;;AAKA,QAAOA,SAAS,GAAE,MAAK;AACrB,QAAIC,IAAI,GAAE,EAAV;AACA,QAAIC,GAAG,GAAGN,EAAE,CAACO,UAAH,CAAc,OAAd,CAAV;AACAD,IAAAA,GAAG,CAACE,UAAJ,CAAgBN,KAAD,IAAW;AACxBG,MAAAA,IAAI,GAAGH,KAAK,CAACO,IAAN,CAAWC,GAAX,CAAgBC,GAAG,IAAI;AAC1B;AACEC,UAAAA,EAAE,EAAED,GAAG,CAACC;AADV,WAEMD,GAAG,CAACE,IAAJ,EAFN;AAIH,OALM,CAAP;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAaV,IAAb;AACAF,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KATD;AAWD,GAdD;;AAgBA,QAAMW,UAAU,GAAIC,IAAD,IAAU;AAC3BH,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACD,GAHD;;AAKA,SAGE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADA,EAGA;AAAO,IAAA,SAAS,EAAC,gCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIE;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CADF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,KAAK,CAACQ,GAAN,CAAW,CAACO,IAAD,EAAOC,GAAP,KACV,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAKD,IAAf;AACM,IAAA,GAAG,EAAKC,GADd;AAEM,IAAA,UAAU,EAAKF,UAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CATF,CAHA,CAHF;AA2BD,CAzDD;;AA4DA,eAAejB,SAAf","sourcesContent":["import React, { useState, useEffect, Fragment} from 'react';\nimport firebase from '../db/firestore';\nimport Room from './Room';\n\nconst ListRooms = () => {\n  const db = firebase.firestore();\n  const [rooms, setRooms] = useState([]);\n\n  useEffect(()=>{\n\n    loadRooms();\n  },[]);\n  \n  const  loadRooms= () =>{\n    let temp =[];\n    let ref = db.collection(\"rooms\");\n    ref.onSnapshot((rooms) => {\n      temp = rooms.docs.map( doc => {\n          return {\n            id: doc.id,\n            ... doc.data()\n          }\n      });\n      console.log( temp);\n      setRooms(temp);\n    })\n  \n  }\n\n  const deleteRoom = (room) => {\n    console.log('en el delete ' );\n    console.log(room);\n  }  \n\n  return (\n\n    \n    <Fragment>\n    <h3 className=\"text-light\">Lista de salas creadas</h3> \n\n    <table className=\"table table-dark table-striped\">\n      <thead>\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">Nombre</th>\n          <th scope=\"col\">Descripccion</th>\n          <th scope=\"col\">Acciones</th>\n        </tr>\n      </thead>\n      <tbody>\n        {rooms.map( (room, idx) => (\n          <Room room = { room } \n                idx = { idx }\n                deleteRoom = { deleteRoom }/>  \n        )\n        )}\n      </tbody>\n    </table>      \n  </Fragment>\n  );\n\n}\n\n\nexport default ListRooms;"]},"metadata":{},"sourceType":"module"}